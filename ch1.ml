(*  int型の3 *)
3;;

(*  int型の11 *)
3 + 4 * 2 ;;

(*  int型の14 *)
(3 + 4) * 2 ;;

(* int型の-1*)
2 - 3 ;;


(* 整数の割り算 *)
7 / 2 ;;

(* 余り *)
7 mod 2;;


Q 2.1

(1)
7 - 3 * 4 ;;

(2)
7 / 2 * 2 ;;

(3)
7 * 2 / 2 ;;


(* float 型 *)
2.718 ;;

(* 四則演算は.つき *)
(3.0 +. 5.0 ) *. 8.0 /. 3.0 ;;

(* べき乗 *)
1.41421356 ** 2.0 ;;

(* 型違いのエラー *)
1.41421356 ** 2  ;; (* 正しくは 1.41421356 ** 2 *)

Q2.2
(1)
2.0 * 3.14 * 10.0 ;;

(2)
1.73 ** 2.0 ;;

(3)
7 / 2.

(* infinity *)
infinity ;;

infinity +. 3.0 ;;

2.0 /. infinity ;;


(* neg_infinity *)
neg_infinity ;;

3.0 -. neg_infinity ;;


(* 文字列 string *)
"Yokohama" ;;

"横浜" ;;

(* 文字列の結合 ^　*)
"横浜" ^ "駅" ;;

"新" ^ "横浜" ^ "駅" ;;

(* 空文字 *)
 "" ;;

 Q.2.3
(1)
"東京" ;;
"特許" ;;
"許可局" ;;
"局長" ;;
"東京"　^ "特許" ^ "許可局" ^ "局長" ;;

(2)
"関数" ;;
"型" ;;
"言語" ;;
"関数" ^ "型" ^ "言語" ;;

(* 真偽値 bool *)
true ;;

false ;;

(* 論理演算 *)
true && true ;;
true && false ;;
true || false ;;
false || false ;;
not true ;;
not false ;;

not(false || not false && not false) ;;

(*  優先度  (低) ||  -> && -> not  (高) *)
 not (false || ((not false) && (not false)))

(* 条件としての真偽値 *)

2 < 3 ;;
2 < 3 && 2.0 >= 3.0 ;;
2 < 3 || 2.0 = 3.0 ;;
not( 3 < 2) ;;

(* 真偽値は大小比較可能 *)
true > false ;;
false > true ;;
ture > true ;;


(* 異なる型は大小比較不可能 *)
2 < 3.0 ;;

Q2.4
(1) 2 < 3
(2) ! 10 <= 3.1415 ** 2.0
(3) 8 mod 3 = 2
(4) 3 + 4 + 5 = 4 * 3
